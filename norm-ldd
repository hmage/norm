#!/usr/bin/env perl

use warnings;
use strict;
use Getopt::Long;

use File::Find;

sub usage {
    print "Usage: $0 [-v] [-q] <full-prefix-path>\n";
    exit 64;
}

my $verbose = '';
my $quiet = '';
GetOptions ("verbose+" => \$verbose,
            "quiet+" => \$quiet) or usage();

if (@ARGV < 1) {
    usage();
}

my $prefix = $ARGV[0];
# strip trailing slashes
while ($prefix =~ /\/\z/) {
    $prefix =~ s|/\z||g;
}


my @files;
sub eachFile {
    return if not -f;
    return if -l;
    return if /(README|INSTALL|COPYING)$/;
    return if /\.(py|pyo|pyc|ri|rb|js|rhtml)$/;
    return if /\.(def|decTest|m4|txt|pc|la|syntax|installed)$/;
    return if /\.(c|h|fon|am|pm|tcl|sl|xml|sh|msg|map|info|pem|ini|hlp|mo|po)$/;
    return if /\.(sample|ttf|css|htm|html|pub|ac|in|inc|sub|conf|site|cnf|pod|el)$/;
    return if /\.(gir|cmake|rules|pickle|tmpl|typelib|packlist)$/;
    return if /\.(gif|png|jpg|jpeg|bmp|pbm|pgm|ppm|ras|sgi|tiff?|xbm|svg)$/;
    return if /\.(aiff|au|wav|aifc|aif)$/;
    return if /\.(x|xbn|xc|xd|xdc|xdw|xn|xr|xs|xsc|xsw|xu|xw)$/;
    return if /\.(a|gox|go|nse|lua|gv|s)$/;
    return if /\.(xsl|xsd|rng|docbook|ent|mod|cat)$/;
    return if /\.(o|cc|test|result|sql|class|java|pl|cfg|opt)$/;
    return if /\.(enc|exp|aug|rlib|json)$/;
    return if /\.(pri|prf|qm|i|swg|qml|prl|qdocconf|qdoc|qdocinc|qmltypes)$/;
    return if /\.(gz|xz|y|e2x|sv|tablet|bat|htaccess|icns|lisp|tmp|dtd|rnc|tex)$/;
    return if /\.(cl)$/;

    my $fullpath = $File::Find::name;
    return if ($fullpath =~ m"/include/");
    return if ($fullpath =~ m"/share/cmake");
    return if ($fullpath =~ m"/share/doc/");
    return if ($fullpath =~ m"/share/docbook-xsl/");
    return if ($fullpath =~ m"/share/docbook-xsl-ns/");
    return if ($fullpath =~ m"/share/gtk-doc/");
    return if ($fullpath =~ m"/share/info/");
    return if ($fullpath =~ m"/share/man");
    return if ($fullpath =~ m"/share/terminfo/");
    return if ($fullpath =~ m"/share/X11/locale/");
    return if ($fullpath =~ m"/share/bash-completion/");
    return if ($fullpath =~ m"/bash_completion.d/");
    return if ($fullpath =~ m"/var/cache/");
    return if ($fullpath =~ m"/mysql-test/");
    return if ($fullpath =~ m"/tmp/compile/");
    return if ($fullpath =~ m"/go/pkg/obj/go-build/");
    return if ($fullpath =~ m"/testdata/");
    push (@files, $fullpath);
}

find (\&eachFile, $prefix);

if ($verbose) {
    print join("\n", @files) . "\n";
}

if (!$quiet) {
    print "Found " . scalar(@files) . " files, checking if they have dependencies outside norm's prefix...\n";
}

delete $ENV{'LD_LIBRARY_PATH'};

my $retstatus = 0;
my $filtered_prefix = quotemeta($prefix);
foreach my $arg (@files) {
    my $output = `ldd "$arg" 2>&1`;
    my $filtered_output = "";
    foreach (split(/\n/, $output)) {
	next if /not a dynamic executable/;
	next if /statically linked/;
	next if m|fatal error: [^ ]+/otool: internal objdump command failed|;
	next if m|$filtered_prefix/|;
	next if /^[\t]linux-(gate|vdso)\.so\.1 (=>  )?\(/;
	next if /^[\t]lib(c|m|dl|rt|pthread|resolv|crypt|util|nsl|mvec)\.so/;
	next if /^[\t]libc.musl-x86_64\.so/;
	next if /^[\t]lib(gcc_s|stdc\+\+|ssp|gomp)\.so/;
	next if /^[\t]libfreebl3.so => \/lib64\/libfreebl3.so \(0x[0-9a-f]+\)$/;
	next if /^[\t]\/lib\/ld-linux\.so\.2/;
	next if /^[\t]\/lib\/ld-linux-aarch64\.so\.1/;
	next if /^[\t]\/lib\/ld-musl-x86_64\.so\.1/;
	next if /^[\t](\/usr)?\/lib64\/ld-linux-x86-64\.so\.2/;
	next if /^[\t]\/lib\/ld-linux-armhf\.so\.3/;
	next if /^[\t]ldd\b/;
	next if m|^[\t]/usr/lib/arm-linux-gnueabihf/libarmmem\.so|;
	## osx first-party frameworks (core)
	next if m[^[\t]/System/Library/Frameworks/Core(Foundation|Services|Graphics|Audio|Video|Media|Image).framework/];
	## osx first-party frameworks (kits)
	next if m[^[\t]/System/Library/Frameworks/(IOKit|AppKit).framework/];
	## osx first-party frameworks (toolbox)
	next if m[^[\t]/System/Library/Frameworks/(Audio|Video)Toolbox.framework/];
	## osx first-party frameworks (base)
	next if m[^[\t]/System/Library/Frameworks/(Cocoa|Carbon|Security|Foundation).framework/];
	## osx first-party frameworks (multimedia)
	next if m[^[\t]/System/Library/Frameworks/(Metal|OpenGL|AVFoundation|ForceFeedback).framework/];
	## osx first-party frameworks
	next if m[^[\t]/System/Library/Frameworks/(LDAP|ApplicationServices|SystemConfiguration).framework/];
	## osx third-party frameworks
	next if m[^[\t]/System/Library/Frameworks/(Tk|Tcl).framework/];
	## osx first-party libraries
	next if m[^[\t]/usr/lib/lib(System\.B|objc.A|resolv\.9|charset\.1|c\+\+\.1)\.dylib];
	## osx third-party system libraries
	next if m[^[\t]/usr/lib/lib(iconv\.2|xml2\.2|z\.1|curl\.4|expat\.1|lzma\.5|bz2\.1\.0|ffi|edit\.3|ncurses\.5\.4)\.dylib];
	$filtered_output .= $_ . "\n";
    }
    if (length $filtered_output) {
	print "$arg:\n";
	print $filtered_output;
	$retstatus = 1;
    }
}

exit $retstatus;
